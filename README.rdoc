= Navigation

A simple, powerful navigation helper for Rails 3. The power of the
plugin lies in controlling multiple navigations.

This plugin is extracted from {Real Space}[http://realspace.me].

== Basic Usage

In your controller:

  class PagesController < ApplicationController
    navigation :content_menu, :pages
  end

  class PostsController < ApplicationController
    navigation :content_menu, :posts
  end
  
In your view:

  <%= navigate :content_menu, :pages do %>
    <%= link_to 'Pages' ... %>
  <% end %>

  <%= navigate :content_menu, :posts do %>
    <%= link_to 'Posts' ... %>
  <% end %>

When the view is rendered, the "current" navigation item will be
selected. Assuming the request routed to the PagesController, the view
is rendered as:

  <span class="selected navigation_item">
    <a href="...">Pages</a>
  </span>
  
  <span class="navigation_item">
    <a href="...">Posts</a>
  </span>

== Multiple Navigations

The real power of this plugin lies in the ability to easily manage
multiple navigations:

  class PagesController
    navigation :main_menu,    :content
    navigation :content_menu, :pages
  end

  class PostsController
    navigation :main_menu,    :content
    navigation :content_menu, :posts
  end

== Navigate Independently

Controller actions can navigate independently of one another:

  class PagesController
    navigation :admin_menu, :new,  :only => [:new, :create]
    navigation :admin_menu, :edit, :only => [:edit, :update]
  end
  
== Conditional Rendering

In your view, you can control when to render a navigation item using
the <tt>:if</tt> or <tt>:unless</tt> options:
  
  <%= navigate :admin_menu, :users, :if => administrator? do %>
    <%= link_to 'Users' ... %>
  <% end %>
  
  <%= navigate :admin_menu, :users, :unless => !administrator? do %>
    <%= link_to 'Users' ... %>
  <% end %>
  
== Customize Navigation Items

=== HTML Tag

You can specify a different HTML tag for your navigation items using
the <tt>:tag</tt> option:

  <%= navigate :content_menu, :pages, :tag => :li do %>
    ...
  <% end %>
  
Will render as:

  <li class="navigation_item">
    ...
  </li>

=== CSS Class

You can specify CSS class names using the <tt>:class</tt> option:

  <%= navigate :main_menu, :pages, :class => 'blue' do %>
    ...
  <% end %>

Will render as:

  <span class="blue navigation_item">
    ...
  </span>

== License

Copyright (c) 2010 Jonathan Sutherland. Released under the MIT license.
